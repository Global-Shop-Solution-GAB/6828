Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout
'open the connection to the database
F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

'check to see which hook the script is firing from
F.Intrinsic.Control.SelectCase(V.Caller.Hook)
	F.Intrinsic.Control.Case(11560)
	'open order - order entry populate hook
		F.Intrinsic.Control.CallSub(SetLoc)
F.Intrinsic.Control.EndSelect

'callsub to end the script
F.Intrinsic.Control.CallSub(f_Main_Unload)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6828", "ProjectTitle", "Order Entry Auto Location", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.SetLoc.Start
F.Intrinsic.Control.Try
V.Local.sOrderNo.Declare(String)
V.Local.sLoc.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sRet.Declare(String)

V.Local.sOrderNo.Set(V.Passed.000003)

'check to see if this is a new order
F.Intrinsic.Control.If(V.Local.sOrderNo.Trim,<>,"")
	'if the order number field isn't blank, we know it's a new order
	'query location table to make sure the location exists
	F.ODBC.Connection!con.ExecuteAndReturn("SELECT LOCATION FROM V_LOCATIONS WHERE LOCATION = 'BW'", V.Local.sRet)
	F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
		'set the location to BW
		V.Passed.000065.Set("BW")
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("The BW Location has not been setup. Please setup the location and try again." , "Required Field")
		F.Intrinsic.Control.ExitSub
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6828", "ProjectTitle", "Order Entry Auto Location", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.SetLoc.End

Program.Sub.f_Main_UnLoad.Start
F.Intrinsic.Control.Try

'close the connection
F.ODBC.Connection!con.Close

'end the program
F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6828", "ProjectTitle", "Order Entry Auto Location", "Callback", "f_Main_UnLoad")
F.Intrinsic.Control.EndTry
Program.Sub.f_Main_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8217.21156$}$1
${$6$}$acollins$}$20220707142945051$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk/XotSp2jZHg4f184fL9Ofg4RbEJ5AuspFWmNjLiLF4/v8WlPmo2pzw==
Program.Sub.Comments.End